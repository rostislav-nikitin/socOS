; struct st_encoder size
.equ SZ_ST_ENCODER				= SZ_ST_DEVICE_IO + 0x03
; struct st_encoder
.equ ST_ENCODER_DDRX_ADDRESS_OFFSET             = ST_DEVICE_IO_DDRX_ADDRESS_OFFSET
.equ ST_ENCODER_PINX_ADDRESS_OFFSET 		= ST_DEVICE_IO_PINX_ADDRESS_OFFSET
.equ ST_ENCODER_PORTX_ADDRESS_OFFSET 		= ST_DEVICE_IO_PORTX_ADDRESS_OFFSET
.equ ST_ENCODER_USED_BIT_MASK_OFFSET		= ST_DEVICE_IO_USED_BIT_MASK_OFFSET
.equ ST_ENCODER_TYPE_BIT_MASK_OFFSET		= ST_DEVICE_IO_TYPE_BIT_MASK_OFFSET
.equ ST_ENCODER_BIT1_MASK_OFFSET 		= SZ_ST_DEVICE_IO
.equ ST_ENCODER_BIT2_MASK_OFFSET		= SZ_ST_DEVICE_IO + 0x01
.equ ST_ENCODER_STATE 				= SZ_ST_DEVICE_IO + 0x02
.equ ST_ENCODER_ON_TURN_HANDLER_OFFSET		= SZ_ST_DEVICE_IO + 0x03
; encoder states
.equ ENCODER_STATE_NONE				= 0x03
.equ ENCODER_STATE_FORBIDDEN			= 0x00
.equ ENCODER_STATE_BACKWARD			= 0x01
.equ ENCODER_STATE_FORWARD			= 0x02